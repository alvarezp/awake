#!/usr/bin/php -f
<?php

function assert_failed($script, $line, $message, $desc) {
	print("Assertion failed in " . basename($script) . ":$line: $desc\n");
	exit(2);
}

assert_options(ASSERT_CALLBACK, "assert_failed");

if ($argc < 2) {
	print("usage: $argv[0] varname files...");
	exit(1);
}

assert(preg_match("/^[a-z][a-z0-9]*$/i", $argv[1]) === 1);

$content = array();
foreach (array_slice($argv, 2) as $f) {
    assert(is_file($f));
    $content[$f] = yaml_parse_file($f);
    if (substr($f,0,1) == '1' || substr($f,0,1) == '2')
        $content[$f]["filename-date"] = substr($f,0,10);
    $content[$f]["url"] = preg_replace("/\.md(\.php)?$|\.rst(\.php)?$|\.html(\.php)?$/", ".html", preg_replace("/^src/", "", $f));
}
print("<?php \$$argv[1] = unserialize(base64_decode('" . base64_encode(serialize($content)) . "')); ?>");
